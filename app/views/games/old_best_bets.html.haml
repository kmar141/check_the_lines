%h1.big-font.white.center Past Picks
.small-4.small-offset-4
  = form_tag games_path, :method => 'custom_search' do
    %p
      = number_field_tag :search, params[:search], placeholder: "Enter score here to show only games that score higher then that number"
      = submit_tag "Search", :name => nil, class: "button"

%row.custom-home-row
  .small-6.columns.white.small-offset-3.border
    %h2.seconday-font.center
      Overall NCAAF Record
    %h1.secondary-font.center
      Correct: #{Game.correct_best_bets}
      Incorrect: #{Game.incorrect_best_bets}

  .small-6.columns.white.small-offset-3.border
    %h2.seconday-font.center
      Overall NFL Record
    %h1.secondary-font.center
      Correct: #{Game.all.spread_best_bets.where(game_over: true).where(sport: "nfl").where(correct_prediction: true).count}
      Incorrect: #{Game.all.spread_best_bets.where(game_over: true).where(correct_prediction: false).where(sport: "nfl").count}

  .small-6.columns.white.small-offset-3.border
    %h2.seconday-font.center
      Overall NBA Record
    %h1.secondary-font.center
      Correct: #{Game.all.spread_best_bets.where(game_over: true).where(sport: "nba").where(correct_prediction: true).count}
      Incorrect: #{Game.all.spread_best_bets.where(game_over: true).where(correct_prediction: false).where(sport: "nba").count}

  .small-6.columns.white.small-offset-3.border
    %h2.seconday-font.center
      Overall NCAAB Record
    %h1.secondary-font.center
      Correct: #{Game.all.spread_best_bets.where(game_over: true).where(sport: "ncaa_basketball").where(correct_prediction: true).count}
      Incorrect: #{Game.all.spread_best_bets.where(game_over: true).where(correct_prediction: false).where(sport: "ncaa_basketball").count}

  .small-6.columns.white.small-offset-3.border
    %h2.seconday-font.center
      Total Record
    %h1.secondary-font.center
      Correct: #{Game.all.spread_best_bets.where(game_over: true).where(correct_prediction: true).count}
      Incorrect: #{Game.all.spread_best_bets.where(game_over: true).where(correct_prediction: false).count}
  
  .small-6.columns.white.small-offset-3

%h1.clear.center.big-font NCAA Football Record

-@old_games.where(sport: "ncaa_football").sort_by{|game| game.strength }.reverse.each do |game|
  .large-3-columns.center.callout.half-width.margin-bottom{:class => [("success" if game.correct_prediction == true),('alert' unless game.correct_prediction)]}
    %h1.alt-font= "#{game.away_team_name} #{game.home_team_name}"
    %h3.header-font
      Date:
      = game.date

    %h3.header-font
      Pick:
      = team_to_bet_name_and_line(game)
    %h3.header-font
      Sport:
      = game.sport
    %h3.header-font= "Strength: #{(game.line_diff * 100 / game.public_percentage_on_massey_team).round(2)}"
    - if game.game_over
      %h3= "Final Score:"
      %h3= "#{game.away_team_name}: #{game.away_team_final_score} #{game.home_team_name}: #{game.home_team_final_score}"
      - if game.correct_prediction
        %h2 "Correct"
      -else
        %h2 "Incorrect"


%h1.clear.center.big-font NCAA Basketball Record

-@old_games.where(sport: "ncaa_basketball").sort_by{|game| game.strength }.reverse.each do |game|
  .large-3-columns.center.callout.half-width.margin-bottom{:class => [("success" if game.correct_prediction == true),('alert' unless game.correct_prediction)]}
    %h1.alt-font= "#{game.away_team_name} #{game.home_team_name}"
    %h3.header-font
      Date:
      = game.date
    %h3.header-font
      Pick:
      = team_to_bet_name_and_line(game)
    %h3.header-font
      Sport:
      = game.sport
    %h3.header-font= "Strength: #{(game.line_diff * 100 / game.public_percentage_on_massey_team).round(2)}"
    - if game.game_over
      %h3= "Final Score:"
      %h3= "#{game.away_team_name}: #{game.away_team_final_score} #{game.home_team_name}: #{game.home_team_final_score}"
      - if game.correct_prediction
        %h2 "Correct"
      -else
        %h2 "Incorrect"


%h1.clear.center.big-font NFL Record

-@old_games.where(sport: "nfl").sort_by{|game| game.strength }.reverse.each do |game|
  .large-3-columns.center.callout.half-width.margin-bottom{:class => [("success" if game.correct_prediction == true),('alert' unless game.correct_prediction)]}
    %h1.alt-font= "#{game.away_team_name} #{game.home_team_name}"
    %h3.header-font
      Date:
      = game.date
    %h3.header-font
      Pick:
      = team_to_bet_name_and_line(game)
    %h3.header-font
      Sport:
      = game.sport
    %h3.header-font= "Strength: #{(game.line_diff * 100 / game.public_percentage_on_massey_team).round(2)}"
    - if game.game_over
      %h3= "Final Score:"
      %h3= "#{game.away_team_name}: #{game.away_team_final_score} #{game.home_team_name}: #{game.home_team_final_score}"
      - if game.correct_prediction
        %h2 "Correct"
      -else
        %h2 "Incorrect"


%h1.clear.center.big-font NBA Record

-@old_games.where(sport: "nba").sort_by{|game| game.strength }.reverse.each do |game|
  .large-3-columns.center.callout.half-width.margin-bottom{:class => [("success" if game.correct_prediction == true),('alert' unless game.correct_prediction)]}
    %h1.alt-font= "#{game.away_team_name} #{game.home_team_name}"
    %h3.header-font
      Date:
      = game.date
    %h3.header-font
      Pick:
      = team_to_bet_name_and_line(game)
    %h3.header-font
      Sport:
      = game.sport
    %h3.header-font= "Strength: #{(game.line_diff * 100 / game.public_percentage_on_massey_team).round(2)}"
    - if game.game_over
      %h3= "Final Score:"
      %h3= "#{game.away_team_name}: #{game.away_team_final_score} #{game.home_team_name}: #{game.home_team_final_score}"
      - if game.correct_prediction
        %h2 "Correct"
      -else
        %h2 "Incorrect"

%table.table.striped
  %thead
    %tr
      %th Week ID
      %th Away Team
      %th Home Team
      %th Strength
      %th Team To Bet
      %th Point Differential
      %th Public % on Massey Team
      %th Correct
  %tbody
    - @old_games.sort_by{|game| game.strength }.reverse.each do |game|
      %tr
        %td= game.week_id
        %td= "#{game.away_team_name}: #{game.away_team_final_score}"
        %td= "#{game.home_team_name}: #{game.home_team_final_score}"
        %td= "#{(game.line_diff * 100 / game.public_percentage_on_massey_team).round(2)}"
        %td= game.team_to_bet
        %td= game.line_diff
        %td= game.public_percentage_on_massey_team
        - if game.game_over
          %td= game.correct_prediction
        - else
          %td Game unplayed
